// Code generated by Fire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/myyrakle/fire/cmd/fire
//go:build !fireinject
// +build !fireinject

package main

// Injectors from fire.go:

// initApp returns a real app.
func initApp() *app {
	mainTimer := _fireRealTimeValue
	mainGreeter := greeter{
		T: mainTimer,
	}
	mainApp := &app{
		g: mainGreeter,
	}
	return mainApp
}

var (
	_fireRealTimeValue = realTime{}
)

// initMockedAppFromArgs returns an app with mocked dependencies provided via
// arguments (Approach A). Note that the argument's type is the interface
// type (timer), but the concrete mock type should be passed.
func initMockedAppFromArgs(mt timer) *app {
	mainGreeter := greeter{
		T: mt,
	}
	mainApp := &app{
		g: mainGreeter,
	}
	return mainApp
}

// initMockedApp returns an app with its mocked dependencies, created
// via providers (Approach B).
func initMockedApp() *appWithMocks {
	mainMockTimer := newMockTimer()
	mainGreeter := greeter{
		T: mainMockTimer,
	}
	mainApp := app{
		g: mainGreeter,
	}
	mainAppWithMocks := &appWithMocks{
		app: mainApp,
		mt:  mainMockTimer,
	}
	return mainAppWithMocks
}
